Feature: Channel-wise Sales Performance Analysis for Biosimilar Brands

  This feature analyzes the total sales performance of biosimilar products (kanjinti, mvasi, riabni) across different channels (online, retail, mobile) using data from the purgo_playground.bai_sales_agg_obu_customer_datapack table. The analysis filters data within 36 months from a specified cdl_effective_date, groups by key attributes, and aggregates sales metrics.

  Background:
    Given the Unity Catalog is "purgo_databricks"
    And the Unity Catalog Schema is "purgo_playground"
    And the source table is "purgo_playground.bai_sales_agg_obu_customer_datapack"
    And the following columns are available:
      | brand_normalized_name | normalized_name | market_normalized_name | competitor_flag | channel_name | transaction_timestamp | integrated_units | integrated_normalized_units | integrated_dollars | cdl_effective_date |
    And the valid biosimilar brands are "kanjinti", "mvasi", and "riabni"
    And the valid channel names are "online", "retail", and "mobile"
    And the cdl_effective_date is provided as a global parameter in "yyyy-MM-dd" format
    And the 36-month window is calculated as records where transaction_timestamp >= cdl_effective_date AND transaction_timestamp < cdl_effective_date + 36 months
    And records with null or missing values in any of the group-by fields or sales metrics are excluded from the aggregation
    And the aggregation is performed for every unique combination of brand_normalized_name, normalized_name, market_normalized_name, competitor_flag, and channel_name

  Scenario Outline: Happy Path - Aggregate sales metrics for valid biosimilar brands and channels within 36 months window
    Given the cdl_effective_date is "<cdl_effective_date>"
    And the table contains records for brand_normalized_name "<brand_normalized_name>" and channel_name "<channel_name>"
    And the transaction_timestamp is within 36 months from "<cdl_effective_date>"
    When the data is filtered for brand_normalized_name in ("kanjinti", "mvasi", "riabni")
    And the data is filtered for channel_name in ("online", "retail", "mobile")
    And the data is filtered for transaction_timestamp >= "<cdl_effective_date>" and transaction_timestamp < "<cdl_effective_date_plus_36_months>"
    And the data is grouped by brand_normalized_name, normalized_name, market_normalized_name, competitor_flag, channel_name
    And the sales metrics are aggregated as:
      | metric                        | aggregation |
      | integrated_units              | sum         |
      | integrated_normalized_units   | sum         |
      | integrated_dollars            | sum         |
    Then the output contains one row per unique group-by combination with the aggregated sales metrics
    And the output only includes records with non-null values in all group-by fields and sales metrics

    Examples:
      | cdl_effective_date | brand_normalized_name | channel_name | cdl_effective_date_plus_36_months |
      | 2021-01-01         | kanjinti              | online       | 2024-01-01                        |
      | 2021-01-01         | mvasi                 | retail       | 2024-01-01                        |
      | 2021-01-01         | riabni                | mobile       | 2024-01-01                        |

  Scenario: Error - Record with null in group-by field is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = null, normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = true, channel_name = "online", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000
    When the data is filtered and grouped
    Then the record is excluded from the output

  Scenario: Error - Record with null in sales metric is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "kanjinti", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = true, channel_name = "online", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = null, integrated_normalized_units = 90, integrated_dollars = 1000
    When the data is filtered and grouped
    Then the record is excluded from the output

  Scenario: Error - Record with invalid channel_name is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "kanjinti", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = true, channel_name = "wholesale", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000
    When the data is filtered for channel_name in ("online", "retail", "mobile")
    Then the record is excluded from the output

  Scenario: Error - Record with transaction_timestamp outside 36 months window is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "mvasi", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = false, channel_name = "retail", transaction_timestamp = "2025-02-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000
    When the data is filtered for transaction_timestamp >= "2021-01-01" and transaction_timestamp < "2024-01-01"
    Then the record is excluded from the output

  Scenario: Error - Record with brand_normalized_name not in biosimilar list is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "otherbrand", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = false, channel_name = "online", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000
    When the data is filtered for brand_normalized_name in ("kanjinti", "mvasi", "riabni")
    Then the record is excluded from the output

  Scenario: Error - Record with invalid cdl_effective_date format is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "kanjinti", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = true, channel_name = "online", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000, cdl_effective_date = "01-01-2021"
    When the cdl_effective_date format is validated as "yyyy-MM-dd"
    Then the record is excluded from the output
    And an error message "Invalid cdl_effective_date format" is logged in purgo_playground.bai_sales_agg_obu_customer_datapack_invalid_cdl_effective_date_log

  Scenario: Error - Record with null cdl_effective_date is excluded
    Given the cdl_effective_date is "2021-01-01"
    And a record exists with brand_normalized_name = "mvasi", normalized_name = "abc", market_normalized_name = "xyz", competitor_flag = false, channel_name = "retail", transaction_timestamp = "2022-01-01 00:00:00", integrated_units = 100, integrated_normalized_units = 90, integrated_dollars = 1000, cdl_effective_date = null
    When the cdl_effective_date is null
    Then the record is excluded from the output
    And an error message "Missing cdl_effective_date" is logged in purgo_playground.bai_sales_agg_obu_customer_datapack_invalid_cdl_effective_date_log

  Scenario Outline: Data-driven - Multiple valid group-by combinations
    Given the cdl_effective_date is "<cdl_effective_date>"
    And the table contains multiple records for brand_normalized_name "<brand_normalized_name>", normalized_name "<normalized_name>", market_normalized_name "<market_normalized_name>", competitor_flag <competitor_flag>, channel_name "<channel_name>" within the 36-month window
    When the data is grouped and aggregated
    Then the output contains a single row for the group with the sum of integrated_units, integrated_normalized_units, and integrated_dollars

    Examples:
      | cdl_effective_date | brand_normalized_name | normalized_name | market_normalized_name | competitor_flag | channel_name |
      | 2021-01-01         | kanjinti              | abc            | xyz                   | true           | online       |
      | 2021-01-01         | mvasi                 | def            | uvw                   | false          | retail       |
      | 2021-01-01         | riabni                | ghi            | rst                   | true           | mobile       |

  Scenario: Output Format - Channel-wise result table
    Given the aggregation is complete
    When the output is generated
    Then the output is a table with columns:
      | brand_normalized_name | normalized_name | market_normalized_name | competitor_flag | channel_name | sum_integrated_units | sum_integrated_normalized_units | sum_integrated_dollars |
    And each row represents a unique combination of the group-by fields

  Scenario: Error - No records after filtering
    Given the cdl_effective_date is "2021-01-01"
    And no records match the filter criteria
    When the data is filtered and grouped
    Then the output is an empty table
